#include <iostream>
#include <windows.h>
#include <conio.h>
使用命名空间std;
无效setcolor（int颜色）
{
	HANDLE hConsole = GetStdHandle（STD_OUTPUT_HANDLE）;
	SetConsoleTextAttribute（hConsole，color）;
}
int currentleval = 1;
// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地
int gmap [2] [10] [12] = 
{ 
	{
	{1,1,1,1,1,0,0,0,0,0,0,0}，
	{1,0,0,0,1,0,1,1,1,0,0,0}，
	{1,0,4,0,1,0,1,1,1,1,1,1,1}，
	{1,0,4,6,1,0,1,0,0,0,3,1}，
	{1,1,1,4,1,1,1,0,0,0,3,1}，
	{0,1,0,0,0,0,0,0,0,0,3,1}，
	{0,1,0,0,0,1,0,0,0,0,0,1}，
	{0,1,0,0,0,1,0,0,0,0,0,1}，
	{0,1,1,1,1,1,0,0,0,0,0,1}，
	{0,0,0,0,0,0,1,1,1,1,1,1,1} 
	}，
	{
	{0,1,1,1,1,0,0,0,0,0,0,0}，
	{0,1,1,1,1,0,1,1,1,0,0,0}，
	{0,1,0,0,0,0,1,1,1,1,1,1,1}，
	{1,1,4,1,1,0,1,0,0,0,0,1}，
	{1,0,6,0,1,0,0,0,0,0,0,1}，
	{1,0,0,1,1,1,0,0,0,0,0,1}，
	{1,0,0,0,4,0,0,4,0,0,0,1}，
	{1,0,3,3,1,0,4,0,0,0,1,1}，
	{1,1,3,3,1,0,0,0,0,1,1,1}，
	{0,1,1,1,1,1,1,1,1,1,1,1,1}
	}

	

};
无效drawmap（）
{
	对于（int i = 0; i <10; i ++）
	{
		对于（int j = 0; j <12; j ++）
		{
			切换（gmap [currentleval] [i] [j]）
			{
			案例0：
				cout <<“”;
				打破;
				
			情况1：
				setcolor（FOREGROUND_RED | FOREGROUND_INTENSITY）;
				cout <<“■”;
				打破;
			情况3：
				setcolor（FOREGROUND_GREEN | FOREGROUND_INTENSITY）;
				cout <<“☆”;
				打破;
			情况4：
				setcolor（FOREGROUND_GREEN | FOREGROUND_RED | FOREGROUND_INTENSITY）;
				cout <<“□”;
				打破;
			情况6：
				setcolor（FOREGROUND_BLUE | FOREGROUND_INTENSITY）;
				cout <<“♀”;
				打破;
			情况7：
				setcolor（FOREGROUND_BLUE | FOREGROUND_RED | FOREGROUND_INTENSITY）;
				cout <<“★”;
				打破;
			案例9：
				setcolor（FOREGROUND_BLUE | FOREGROUND_INTENSITY）;
				cout <<“♀”;
				打破;
			}
		}
		cout << endl;
	}
}
POINT getposition（）
{
	POINT pos = {-1，-1};
	对于（int i = 0; i <10; i ++）
	{
		对于（int j = 0; j <12; j ++）
		{
			如果（gmap [currentleval] [i] [j] == 6 || gmap [currentleval] [i] [j] == 9）
			{
				pos.x = i;
				pos.y = j;
				返回pos
			}
		}
	}
}
无效（）
{
	// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地（人）
	POINT pos = getposition（）;

	//人的前面是空地
	如果（gmap [currentleval] [pos.x-1] [pos.y] == 0）
	{
		gmap [currentleval] [pos.x-1] [pos.y] = 6;


		//打扫战场
		if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
			gmap [currentleval] [pos.x] [pos.y] = 3;
		否则gmap [currentleval] [pos.x] [pos.y] = 0;
	}

	//人的前面是目的地
	如果（gmap [currentleval] [pos.x-1] [pos.y] == 3）
	{
		gmap [currentleval] [pos.x-1] [pos.y] = 9;


		//打扫战场
		if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
			gmap [currentleval] [pos.x] [pos.y] = 3;
		否则gmap [currentleval] [pos.x] [pos.y] = 0;
	}

	//人的前面是箱子
	// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地（人）
	如果（gmap [currentleval] [pos.x-1] [pos.y] == 4）
	{
		// 1箱子的前面是空地
		如果（gmap [currentleval] [pos.x-2] [pos.y] == 0）
		{
			gmap [currentleval] [pos.x-2] [pos.y] = 4;
			gmap [currentleval] [pos.x-1] [pos.y] = 6;

			//打扫战场
			if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
				gmap [currentleval] [pos.x] [pos.y] = 3;
			否则gmap [currentleval] [pos.x] [pos.y] = 0;
		}

		// 2箱子的前面是目的地
		// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地（人）
		如果（gmap [currentleval] [pos.x-2] [pos.y] == 3）
		{
			gmap [currentleval] [pos.x-2] [pos.y] = 7;
			gmap [currentleval] [pos.x-1] [pos.y] = 6;

			//打扫战场
			if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
				gmap [currentleval] [pos.x] [pos.y] = 3;
			否则gmap [currentleval] [pos.x] [pos.y] = 0;
		}

	}
		

	//人的前面是箱子和目的地的重合
	如果（gmap [currentleval] [pos.x-1] [pos.y] == 7）
	{
		// 1箱子的前面是空地
		如果（gmap [currentleval] [pos.x-2] [pos.y] == 0）
		{
			gmap [currentleval] [pos.x-2] [pos.y] = 4;
			gmap [currentleval] [pos.x-1] [pos.y] = 9;

			//打扫战场
			if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
				gmap [currentleval] [pos.x] [pos.y] = 3;
			否则gmap [currentleval] [pos.x] [pos.y] = 0;
		}

		// 2箱子的前面是目的地
		// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地（人）
		如果（gmap [currentleval] [pos.x-2] [pos.y] == 3）
		{
			gmap [currentleval] [pos.x-2] [pos.y] = 7;
			gmap [currentleval] [pos.x-1] [pos.y] = 9;

			//打扫战场
			if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
				gmap [currentleval] [pos.x] [pos.y] = 3;
			否则gmap [currentleval] [pos.x] [pos.y] = 0;
		}

	}
}

无效down（）
{
	// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地（人）
	POINT pos = getposition（）;

	//人的前面是空地
	如果（gmap [currentleval] [pos.x + 1] [pos.y] == 0）
	{
		gmap [currentleval] [pos.x +1] [pos.y] = 6;


		//打扫战场
		if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
			gmap [currentleval] [pos.x] [pos.y] = 3;
		否则gmap [currentleval] [pos.x] [pos.y] = 0;
	}

	//人的前面是目的地
	如果（gmap [currentleval] [pos.x + 1] [pos.y] == 3）
	{
		gmap [currentleval] [pos.x + 1] [pos.y] = 9;


		//打扫战场
		if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
			gmap [currentleval] [pos.x] [pos.y] = 3;
		否则gmap [currentleval] [pos.x] [pos.y] = 0;
	}

	//人的前面是箱子
	// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地（人）
	如果（gmap [currentleval] [pos.x + 1] [pos.y] == 4）
	{
		// 1箱子的前面是空地
		如果（gmap [currentleval] [pos.x + 2] [pos.y] == 0）
		{
			gmap [currentleval] [pos.x +2] [pos.y] = 4;
			gmap [currentleval] [pos.x + 1] [pos.y] = 6;

			//打扫战场
			if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
				gmap [currentleval] [pos.x] [pos.y] = 3;
			否则gmap [currentleval] [pos.x] [pos.y] = 0;
		}

		// 2箱子的前面是目的地
		// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地（人）
		如果（gmap [currentleval] [pos.x + 2] [pos.y] == 3）
		{
			gmap [currentleval] [pos.x +2] [pos.y] = 7;
			gmap [currentleval] [pos.x + 1] [pos.y] = 6;

			//打扫战场
			if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
				gmap [currentleval] [pos.x] [pos.y] = 3;
			否则gmap [currentleval] [pos.x] [pos.y] = 0;
		}

	}


	//人的前面是箱子和目的地的重合
	如果（gmap [currentleval] [pos.x + 1] [pos.y] == 7）
	{
		// 1箱子的前面是空地
		如果（gmap [currentleval] [pos.x + 2] [pos.y] == 0）
		{
			gmap [currentleval] [pos.x + 2] [pos.y] = 4;
			gmap [currentleval] [pos.x + 1] [pos.y] = 9;

			//打扫战场
			if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
				gmap [currentleval] [pos.x] [pos.y] = 3;
			否则gmap [currentleval] [pos.x] [pos.y] = 0;
		}

		// 2箱子的前面是目的地
		// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地（人）
		如果（gmap [currentleval] [pos.x + 2] [pos.y] == 3）
		{
			gmap [currentleval] [pos.x + 2] [pos.y] = 7;
			gmap [currentleval] [pos.x + 1] [pos.y] = 9;

			//打扫战场
			if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
				gmap [currentleval] [pos.x] [pos.y] = 3;
			否则gmap [currentleval] [pos.x] [pos.y] = 0;
		}

	}
}

无效left（）
{

	// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地（人）
	POINT pos = getposition（）;

	//人的前面是空地
	如果（gmap [currentleval] [pos.x] [pos.y-1] == 0）
	{
		gmap [currentleval] [pos.x] [pos.y-1] = 6;


		//打扫战场
		if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
			gmap [currentleval] [pos.x] [pos.y] = 3;
		否则gmap [currentleval] [pos.x] [pos.y] = 0;
	}

	//人的前面是目的地
	如果（gmap [currentleval] [pos.x] [pos.y-1] == 3）
	{
		gmap [currentleval] [pos.x] [pos.y-1] = 9;


		//打扫战场
		if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
			gmap [currentleval] [pos.x] [pos.y] = 3;
		否则gmap [currentleval] [pos.x] [pos.y] = 0;
	}

	//人的前面是箱子
	// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地（人）
	如果（gmap [currentleval] [pos.x] [pos.y-1] == 4）
	{
		// 1箱子的前面是空地
		如果（gmap [currentleval] [pos.x] [pos.y-2] == 0）
		{
			gmap [currentleval] [pos.x] [pos.y-2] = 4;
			gmap [currentleval] [pos.x] [pos.y-1] = 6;

			//打扫战场
			if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
				gmap [currentleval] [pos.x] [pos.y] = 3;
			否则gmap [currentleval] [pos.x] [pos.y] = 0;
		}

		// 2箱子的前面是目的地
		// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地（人）
		如果（gmap [currentleval] [pos.x] [pos.y-2] == 3）
		{
			gmap [currentleval] [pos.x] [pos.y-2] = 7;
			gmap [currentleval] [pos.x] [pos.y-1] = 6;

			//打扫战场
			if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
				gmap [currentleval] [pos.x] [pos.y] = 3;
			否则gmap [currentleval] [pos.x] [pos.y] = 0;
		}

	}


	//人的前面是箱子和目的地的重合
	如果（gmap [currentleval] [pos.x] [pos.y-1] == 7）
	{
		// 1箱子的前面是空地
		如果（gmap [currentleval] [pos.x] [pos.y-2] == 0）
		{
			gmap [currentleval] [pos.x] [pos.y-2] = 4;
			gmap [currentleval] [pos.x] [pos.y-1] = 9;

			//打扫战场
			if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
				gmap [currentleval] [pos.x] [pos.y] = 3;
			否则gmap [currentleval] [pos.x] [pos.y] = 0;
		}

		// 2箱子的前面是目的地
		// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地（人）
		如果（gmap [currentleval] [pos.x] [pos.y-2] == 3）
		{
			gmap [currentleval] [pos.x] [pos.y-2] = 7;
			gmap [currentleval] [pos.x] [pos.y-1] = 9;

			//打扫战场
			if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
				gmap [currentleval] [pos.x] [pos.y] = 3;
			否则gmap [currentleval] [pos.x] [pos.y] = 0;
		}

	}
}

无效right（）
{
	// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地（人）
	POINT pos = getposition（）;

	//人的前面是空地
	如果（gmap [currentleval] [pos.x] [pos.y + 1] == 0）
	{
		gmap [currentleval] [pos.x] [pos.y + 1] = 6;


		//打扫战场
		if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
			gmap [currentleval] [pos.x] [pos.y] = 3;
		否则gmap [currentleval] [pos.x] [pos.y] = 0;
	}

	//人的前面是目的地
	如果（gmap [currentleval] [pos.x] [pos.y + 1] == 3）
	{
		gmap [currentleval] [pos.x] [pos.y + 1] = 9;


		//打扫战场
		if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
			gmap [currentleval] [pos.x] [pos.y] = 3;
		否则gmap [currentleval] [pos.x] [pos.y] = 0;
	}

	//人的前面是箱子
	// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地（人）
	如果（gmap [currentleval] [pos.x] [pos.y + 1] == 4）
	{
		// 1箱子的前面是空地
		如果（gmap [currentleval] [pos.x] [pos.y + 2] == 0）
		{
			gmap [currentleval] [pos.x] [pos.y + 2] = 4;
			gmap [currentleval] [pos.x] [pos.y + 1] = 6;

			//打扫战场
			if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
				gmap [currentleval] [pos.x] [pos.y] = 3;
			否则gmap [currentleval] [pos.x] [pos.y] = 0;
		}

		// 2箱子的前面是目的地
		// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地（人）
		如果（gmap [currentleval] [pos.x] [pos.y + 2] == 3）
		{
			gmap [currentleval] [pos.x] [pos.y + 2] = 7;
			gmap [currentleval] [pos.x] [pos.y + 1] = 6;

			//打扫战场
			if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
				gmap [currentleval] [pos.x] [pos.y] = 3;
			否则gmap [currentleval] [pos.x] [pos.y] = 0;
		}

	}


	//人的前面是箱子和目的地的重合
	如果（gmap [currentleval] [pos.x] [pos.y + 1] == 7）
	{
		// 1箱子的前面是空地
		如果（gmap [currentleval] [pos.x] [pos.y + 2] == 0）
		{
			gmap [currentleval] [pos.x] [pos.y + 2] = 4;
			gmap [currentleval] [pos.x] [pos.y + 1] = 9;

			//打扫战场
			if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
				gmap [currentleval] [pos.x] [pos.y] = 3;
			否则gmap [currentleval] [pos.x] [pos.y] = 0;
		}

		// 2箱子的前面是目的地
		// 0空地1门户3目的地4箱子6人7箱子和目的地集合9人在目的地（人）
		如果（gmap [currentleval] [pos.x] [pos.y + 2] == 3）
		{
			gmap [currentleval] [pos.x] [pos.y + 2] = 7;
			gmap [currentleval] [pos.x] [pos.y + 1] = 9;

			//打扫战场
			if（gmap [currentleval] [pos.x] [pos.y] == 9）//如果人在目的地
				gmap [currentleval] [pos.x] [pos.y] = 3;
			否则gmap [currentleval] [pos.x] [pos.y] = 0;
		}

	}
}

//剩余箱子个数
int getcurbox（）
{
	int count = 0;
	for（int i = 0; i <10; i ++）
		对于（int j = 0; j <12; j ++）
		{
			如果（gmap [currentleval] [i] [j] == 4）count ++;
		}
	返回计数；
}

int main（）
{
	
	SetConsoleTitle（“推箱子”）;
	system（“ mode con cols = 26 lines = 12”）;
	而（1）
	{
		如果（（getcurbox（）== 0））
		{
			currentleval ++;
		}
		如果（当前水平== 2） 
		{
			system（“ cls”）;
			cout <<“你可以游戏结束！”;
			退出（0）;
		}
		system（“ cls”）;
		drawmap（）;
		char ch = _getch（）;
		开关（ch）
		{
		情况“ w”：
			up（）;
			打破;
		情况：
			下（）;
			打破;
		情况“ a”：
			剩下（）;
			打破;
		情况“ d”：
			对（）;
			打破;
		}
	}
	返回0;
}
