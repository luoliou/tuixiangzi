#include <iostream>
#include <windows.h>
#include <conio.h>
using namespace std;
void setcolor(int color)
{
	HANDLE hConsole = GetStdHandle(STD_OUTPUT_HANDLE);
	SetConsoleTextAttribute(hConsole, color);
}
int currentleval = 1;
//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地
int gmap[2][10][12] = 
{ 
	{
	{1,1,1,1,1,0,0,0,0,0,0,0},
	{1,0,0,0,1,0,1,1,1,0,0,0},
	{1,0,4,0,1,0,1,1,1,1,1,1},
	{1,0,4,6,1,0,1,0,0,0,3,1},
	{1,1,1,4,1,1,1,0,0,0,3,1},
	{0,1,0,0,0,0,0,0,0,0,3,1},
	{0,1,0,0,0,1,0,0,0,0,0,1},
	{0,1,0,0,0,1,0,0,0,0,0,1},
	{0,1,1,1,1,1,0,0,0,0,0,1},
	{0,0,0,0,0,0,1,1,1,1,1,1} 
	},
	{
	{0,1,1,1,1,0,0,0,0,0,0,0},
	{0,1,1,1,1,0,1,1,1,0,0,0},
	{0,1,0,0,0,0,1,1,1,1,1,1},
	{1,1,4,1,1,0,1,0,0,0,0,1},
	{1,0,6,0,1,0,0,0,0,0,0,1},
	{1,0,0,1,1,1,0,0,0,0,0,1},
	{1,0,0,0,4,0,0,4,0,0,0,1},
	{1,0,3,3,1,0,4,0,0,0,1,1},
	{1,1,3,3,1,0,0,0,0,1,1,1},
	{0,1,1,1,1,1,1,1,1,1,1,1}
	}

	

};
void drawmap()
{
	for (int i = 0; i < 10; i++)
	{
		for (int j = 0; j < 12; j++)
		{
			switch (gmap[currentleval][i][j])
			{
			case 0:
				cout << "  ";
				break;
				
			case 1:
				setcolor(FOREGROUND_RED| FOREGROUND_INTENSITY);
				cout << "■";
				break;
			case 3:
				setcolor(FOREGROUND_GREEN | FOREGROUND_INTENSITY);
				cout << "☆";
				break;
			case 4:
				setcolor(FOREGROUND_GREEN | FOREGROUND_RED | FOREGROUND_INTENSITY);
				cout << "□";
				break;
			case 6:
				setcolor(FOREGROUND_BLUE | FOREGROUND_INTENSITY);
				cout << "♀";
				break;
			case 7:
				setcolor(FOREGROUND_BLUE | FOREGROUND_RED | FOREGROUND_INTENSITY);
				cout << "★";
				break;
			case 9:
				setcolor(FOREGROUND_BLUE | FOREGROUND_INTENSITY);
				cout << "♀";
				break;
			}
		}
		cout << endl;
	}
}
POINT getposition()
{
	POINT pos= { -1,-1 };
	for (int i = 0; i < 10; i++)
	{
		for (int j = 0; j < 12; j++)
		{
			if (gmap[currentleval][i][j] == 6 || gmap[currentleval][i][j] == 9)
			{
				pos.x = i;
				pos.y = j;
				return pos;
			}
		}
	}
}
void up()
{
	//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地(人)
	POINT pos = getposition();

	//人的前面是空地
	if (gmap[currentleval][pos.x - 1][pos.y] == 0)
	{
		gmap[currentleval][pos.x-1][pos.y] = 6;


		//打扫战场
		if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
			gmap[currentleval][pos.x][pos.y] = 3;
		else gmap[currentleval][pos.x][pos.y] = 0;
	}

	//人的前面是目的地
	if (gmap[currentleval][pos.x - 1][pos.y] == 3)
	{
		gmap[currentleval][pos.x - 1][pos.y] = 9;


		//打扫战场
		if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
			gmap[currentleval][pos.x][pos.y] = 3;
		else gmap[currentleval][pos.x][pos.y] = 0;
	}

	//人的前面是箱子
	//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地(人)
	if (gmap[currentleval][pos.x - 1][pos.y] == 4)
	{
		//1 箱子的前面是空地
		if (gmap[currentleval][pos.x - 2][pos.y] == 0)
		{
			gmap[currentleval][pos.x - 2][pos.y] = 4;
			gmap[currentleval][pos.x - 1][pos.y] = 6;

			//打扫战场
			if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
				gmap[currentleval][pos.x][pos.y] = 3;
			else gmap[currentleval][pos.x][pos.y] = 0;
		}

		//2 箱子的前面是目的地
		//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地(人)
		if (gmap[currentleval][pos.x - 2][pos.y] == 3)
		{
			gmap[currentleval][pos.x - 2][pos.y] = 7;
			gmap[currentleval][pos.x - 1][pos.y] = 6;

			//打扫战场
			if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
				gmap[currentleval][pos.x][pos.y] = 3;
			else gmap[currentleval][pos.x][pos.y] = 0;
		}

	}
		

	//人的前面是箱子和目的地的重合
	if (gmap[currentleval][pos.x - 1][pos.y] == 7)
	{
		//1 箱子的前面是空地
		if (gmap[currentleval][pos.x - 2][pos.y] == 0)
		{
			gmap[currentleval][pos.x - 2][pos.y] = 4;
			gmap[currentleval][pos.x - 1][pos.y] = 9;

			//打扫战场
			if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
				gmap[currentleval][pos.x][pos.y] = 3;
			else gmap[currentleval][pos.x][pos.y] = 0;
		}

		//2 箱子的前面是目的地
		//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地(人)
		if (gmap[currentleval][pos.x - 2][pos.y] == 3)
		{
			gmap[currentleval][pos.x - 2][pos.y] = 7;
			gmap[currentleval][pos.x - 1][pos.y] = 9;

			//打扫战场
			if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
				gmap[currentleval][pos.x][pos.y] = 3;
			else gmap[currentleval][pos.x][pos.y] = 0;
		}

	}
}

void down()
{
	//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地(人)
	POINT pos = getposition();

	//人的前面是空地
	if (gmap[currentleval][pos.x + 1][pos.y] == 0)
	{
		gmap[currentleval][pos.x +1][pos.y] = 6;


		//打扫战场
		if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
			gmap[currentleval][pos.x][pos.y] = 3;
		else gmap[currentleval][pos.x][pos.y] = 0;
	}

	//人的前面是目的地
	if (gmap[currentleval][pos.x + 1][pos.y] == 3)
	{
		gmap[currentleval][pos.x + 1][pos.y] = 9;


		//打扫战场
		if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
			gmap[currentleval][pos.x][pos.y] = 3;
		else gmap[currentleval][pos.x][pos.y] = 0;
	}

	//人的前面是箱子
	//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地(人)
	if (gmap[currentleval][pos.x + 1][pos.y] == 4)
	{
		//1 箱子的前面是空地
		if (gmap[currentleval][pos.x + 2][pos.y] == 0)
		{
			gmap[currentleval][pos.x +2][pos.y] = 4;
			gmap[currentleval][pos.x + 1][pos.y] = 6;

			//打扫战场
			if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
				gmap[currentleval][pos.x][pos.y] = 3;
			else gmap[currentleval][pos.x][pos.y] = 0;
		}

		//2 箱子的前面是目的地
		//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地(人)
		if (gmap[currentleval][pos.x + 2][pos.y] == 3)
		{
			gmap[currentleval][pos.x +2][pos.y] = 7;
			gmap[currentleval][pos.x + 1][pos.y] = 6;

			//打扫战场
			if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
				gmap[currentleval][pos.x][pos.y] = 3;
			else gmap[currentleval][pos.x][pos.y] = 0;
		}

	}


	//人的前面是箱子和目的地的重合
	if (gmap[currentleval][pos.x + 1][pos.y] == 7)
	{
		//1 箱子的前面是空地
		if (gmap[currentleval][pos.x + 2][pos.y] == 0)
		{
			gmap[currentleval][pos.x + 2][pos.y] = 4;
			gmap[currentleval][pos.x + 1][pos.y] = 9;

			//打扫战场
			if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
				gmap[currentleval][pos.x][pos.y] = 3;
			else gmap[currentleval][pos.x][pos.y] = 0;
		}

		//2 箱子的前面是目的地
		//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地(人)
		if (gmap[currentleval][pos.x + 2][pos.y] == 3)
		{
			gmap[currentleval][pos.x + 2][pos.y] = 7;
			gmap[currentleval][pos.x + 1][pos.y] = 9;

			//打扫战场
			if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
				gmap[currentleval][pos.x][pos.y] = 3;
			else gmap[currentleval][pos.x][pos.y] = 0;
		}

	}
}

void left()
{

	//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地(人)
	POINT pos = getposition();

	//人的前面是空地
	if (gmap[currentleval][pos.x][pos.y-1] == 0)
	{
		gmap[currentleval][pos.x][pos.y-1] = 6;


		//打扫战场
		if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
			gmap[currentleval][pos.x][pos.y] = 3;
		else gmap[currentleval][pos.x][pos.y] = 0;
	}

	//人的前面是目的地
	if (gmap[currentleval][pos.x ][pos.y - 1] == 3)
	{
		gmap[currentleval][pos.x ][pos.y - 1] = 9;


		//打扫战场
		if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
			gmap[currentleval][pos.x][pos.y] = 3;
		else gmap[currentleval][pos.x][pos.y] = 0;
	}

	//人的前面是箱子
	//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地(人)
	if (gmap[currentleval][pos.x ][pos.y - 1] == 4)
	{
		//1 箱子的前面是空地
		if (gmap[currentleval][pos.x ][pos.y - 2] == 0)
		{
			gmap[currentleval][pos.x ][pos.y - 2] = 4;
			gmap[currentleval][pos.x ][pos.y - 1] = 6;

			//打扫战场
			if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
				gmap[currentleval][pos.x][pos.y] = 3;
			else gmap[currentleval][pos.x][pos.y] = 0;
		}

		//2 箱子的前面是目的地
		//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地(人)
		if (gmap[currentleval][pos.x ][pos.y - 2] == 3)
		{
			gmap[currentleval][pos.x ][pos.y - 2] = 7;
			gmap[currentleval][pos.x ][pos.y - 1] = 6;

			//打扫战场
			if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
				gmap[currentleval][pos.x][pos.y] = 3;
			else gmap[currentleval][pos.x][pos.y] = 0;
		}

	}


	//人的前面是箱子和目的地的重合
	if (gmap[currentleval][pos.x ][pos.y - 1] == 7)
	{
		//1 箱子的前面是空地
		if (gmap[currentleval][pos.x ][pos.y - 2] == 0)
		{
			gmap[currentleval][pos.x][pos.y - 2] = 4;
			gmap[currentleval][pos.x ][pos.y - 1] = 9;

			//打扫战场
			if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
				gmap[currentleval][pos.x][pos.y] = 3;
			else gmap[currentleval][pos.x][pos.y] = 0;
		}

		//2 箱子的前面是目的地
		//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地(人)
		if (gmap[currentleval][pos.x ][pos.y - 2] == 3)
		{
			gmap[currentleval][pos.x][pos.y - 2] = 7;
			gmap[currentleval][pos.x ][pos.y - 1] = 9;

			//打扫战场
			if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
				gmap[currentleval][pos.x][pos.y] = 3;
			else gmap[currentleval][pos.x][pos.y] = 0;
		}

	}
}

void right()
{
	//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地(人)
	POINT pos = getposition();

	//人的前面是空地
	if (gmap[currentleval][pos.x ][pos.y + 1] == 0)
	{
		gmap[currentleval][pos.x][pos.y + 1] = 6;


		//打扫战场
		if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
			gmap[currentleval][pos.x][pos.y] = 3;
		else gmap[currentleval][pos.x][pos.y] = 0;
	}

	//人的前面是目的地
	if (gmap[currentleval][pos.x ][pos.y + 1] == 3)
	{
		gmap[currentleval][pos.x ][pos.y + 1] = 9;


		//打扫战场
		if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
			gmap[currentleval][pos.x][pos.y] = 3;
		else gmap[currentleval][pos.x][pos.y] = 0;
	}

	//人的前面是箱子
	//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地(人)
	if (gmap[currentleval][pos.x][pos.y + 1] == 4)
	{
		//1 箱子的前面是空地
		if (gmap[currentleval][pos.x][pos.y + 2] == 0)
		{
			gmap[currentleval][pos.x ][pos.y + 2] = 4;
			gmap[currentleval][pos.x ][pos.y + 1] = 6;

			//打扫战场
			if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
				gmap[currentleval][pos.x][pos.y] = 3;
			else gmap[currentleval][pos.x][pos.y] = 0;
		}

		//2 箱子的前面是目的地
		//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地(人)
		if (gmap[currentleval][pos.x][pos.y + 2] == 3)
		{
			gmap[currentleval][pos.x ][pos.y + 2] = 7;
			gmap[currentleval][pos.x][pos.y + 1] = 6;

			//打扫战场
			if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
				gmap[currentleval][pos.x][pos.y] = 3;
			else gmap[currentleval][pos.x][pos.y] = 0;
		}

	}


	//人的前面是箱子和目的地的重合
	if (gmap[currentleval][pos.x ][pos.y + 1] == 7)
	{
		//1 箱子的前面是空地
		if (gmap[currentleval][pos.x ][pos.y + 2] == 0)
		{
			gmap[currentleval][pos.x][pos.y + 2] = 4;
			gmap[currentleval][pos.x ][pos.y + 1] = 9;

			//打扫战场
			if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
				gmap[currentleval][pos.x][pos.y] = 3;
			else gmap[currentleval][pos.x][pos.y] = 0;
		}

		//2 箱子的前面是目的地
		//0 空地    1墙壁    3目的地  4 箱子  6人   7箱子和目的地集合    9人在目的地(人)
		if (gmap[currentleval][pos.x ][pos.y + 2] == 3)
		{
			gmap[currentleval][pos.x][pos.y + 2] = 7;
			gmap[currentleval][pos.x ][pos.y + 1] = 9;

			//打扫战场
			if (gmap[currentleval][pos.x][pos.y] == 9)//如果人在目的地
				gmap[currentleval][pos.x][pos.y] = 3;
			else gmap[currentleval][pos.x][pos.y] = 0;
		}

	}
}

//剩余箱子个数
int getcurbox()
{
	int count = 0;
	for(int i=0;i<10;i++)
		for (int j = 0; j < 12; j++)
		{
			if (gmap[currentleval][i][j] == 4)count++;
		}
	return count;
}

int main()
{
	
	SetConsoleTitle("推箱子");
	system("mode con cols=26 lines=12");
	while (1)
	{
		if ((getcurbox ()== 0))
		{
			currentleval++;
		}
		if (currentleval == 2) 
		{
			system("cls");
			cout << "你可以游戏结束！";
			exit(0);
		}
		system("cls");
		drawmap();
		char ch = _getch();
		switch (ch)
		{
		case 'w':
			up();
			break;
		case 's':
			down();
			break;
		case 'a':
			left();
			break;
		case 'd':
			right();
			break;
		}
	}
	return 0;
}